package br.com.belval.Crud.Rest.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.fasterxml.jackson.annotation.JsonFormat;

import br.com.belval.Crud.Rest.model.Produto;

@RestController
@JsonFormat(shape =JsonFormat.Shape.OBJECT)
public class ProdutoController {

	private static List<Produto> listaProdutos = new ArrayList<>();
	private static Integer proxId=1;
	static {
//		Produto p = new Produto();
//		p.setId(1);
//		p.setNome("Pão");
//		p.setDescricao("Pão Frances");
//		p.setPreco(1.5);
//		listaProdutos.add(p);
		
	}

	@GetMapping("/produtos")
	public ResponseEntity<List<Produto>> obterProdutos() {
		return ResponseEntity
				.status(HttpStatus.OK)
				.body(listaProdutos);

	}

	@PostMapping("/produtos")
	public ResponseEntity<Produto> criarProduto(@RequestBody Produto produto) {
		produto.setId(proxId++);
		listaProdutos.add(produto);
		return ResponseEntity.status(HttpStatus.CREATED).body(produto);
	
	}
	@GetMapping ("/produtos/{id}")
	public ResponseEntity<Object> bucarProdutoPorId(@PathVariable Integer id){
		Produto produto = findById(id);
		
		if(produto==null){
			return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Produto não encontrado.");
		}
		return ResponseEntity.status(HttpStatus.OK).body(produto);

	}
	private Produto findById(Integer id) {
		 for(Produto p:listaProdutos) {
			 if(p.getId().equals(proxId)) {
				 return p;
			 }
			 
		 }
		 return null;
	}
}

//$ curl POST http://localhost:8080/produtos -H "Content-Type": aplication/json; Charset=uft-8" -d @produto-mortadela.json
